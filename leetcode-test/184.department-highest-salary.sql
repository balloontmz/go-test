--
-- @lc app=leetcode id=184 lang=mysql
--
-- [184] Department Highest Salary
--
-- https://leetcode.com/problems/department-highest-salary/description/
--
-- database
-- Medium (29.06%)
-- Likes:    311
-- Dislikes: 78
-- Total Accepted:    70K
-- Total Submissions: 233.2K
-- Testcase Example:  '{"headers": {"Employee": ["Id", "Name", "Salary", "DepartmentId"], ' +
--  '"Department": ["Id", "Name"]}, "rows": {"Employee": [[1, "Joe", ' +
  -- '70000, 1], [2, "Jim", 90000, 1], [3, "Henry", 80000, 2], [4, "Sam", ' +
  -- '60000, 2], [5, "Max", 90000, 1]], "Department": [[1, "IT"], [2, ' +
  -- '"Sales"]]}}'
--
-- The Employee table holds all employees. Every employee has an Id, a salary,
-- and there is also a column for the department Id.
-- 
-- 
-- +----+-------+--------+--------------+
-- | Id | Name  | Salary | DepartmentId |
-- +----+-------+--------+--------------+
-- | 1  | Joe   | 70000  | 1            |
-- | 2  | Jim   | 90000  | 1            |
-- | 3  | Henry | 80000  | 2            |
-- | 4  | Sam   | 60000  | 2            |
-- | 5  | Max   | 90000  | 1            |
-- +----+-------+--------+--------------+
-- 
-- 
-- The Department table holds all departments of the company.
-- 
-- 
-- +----+----------+
-- | Id | Name     |
-- +----+----------+
-- | 1  | IT       |
-- | 2  | Sales    |
-- +----+----------+
-- 
-- 
-- Write a SQL query to find employees who have the highest salary in each of
-- the departments. For the above tables, your SQL query should return the
-- following rows (order of rows does not matter).
-- 
-- 
-- +------------+----------+--------+
-- | Department | Employee | Salary |
-- +------------+----------+--------+
-- | IT         | Max      | 90000  |
-- | IT         | Jim      | 90000  |
-- | Sales      | Henry    | 80000  |
-- +------------+----------+--------+
-- 
-- 
-- Explanation:
-- 
-- Max and Jim both have the highest salary in the IT department and Henry has
-- the highest salary in the Sales department.
-- 
--
-- # Write your MySQL query statement below
-- 创建一个临时表，包含了部门员工的最大薪资。可以对部门进行分组，然后使用 MAX() 汇总函数取得最大薪资。
-- 之后使用连接找到一个部门中薪资等于临时表中最大薪资的员工。

SELECT D.Name Department, E.Name Employee, E.Salary Salary FROM Employee E, Department D, (SELECT DepartmentId, MAX(Salary) Salary FROM Employee GROUP BY DepartmentId) M WHERE E.DepartmentId = D.Id AND E.DepartmentId = M.DepartmentId AND E.Salary = M.Salary;

